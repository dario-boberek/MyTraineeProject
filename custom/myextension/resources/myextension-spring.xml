<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="myextensionSystemSetup" class="training.my.setup.MyextensionSystemSetup">
        <!-- constructor arg injection example -->
        <constructor-arg ref="myextensionService"/>
    </bean>

    <bean id="myextensionService" class="training.my.service.impl.DefaultMyextensionService">
        <!-- setter injection example -->
        <property name="modelService" ref="modelService"/>
        <property name="mediaService" ref="mediaService"/>
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>

    <!--///////////////////////////////////////////////////////////-->

    <bean id="myOrderService" class="training.my.service.impl.MyOrderServiceImpl"/>

    <bean id="myUserService" class="training.my.service.impl.MyUserServiceImpl"/>

    <bean id="myPopulator" class="training.my.populator.MyPopulator"/>

    <bean id="myConverter" parent="abstractPopulatingConverter">
        <property name="targetClass" value="training.my.mycommercefacade.product.data.ProductData"/>
        <property name="populators">
            <list>
                <ref bean="myPopulator"/>
            </list>
        </property>
    </bean>

    <alias name="myProductDataFacadeImpl" alias="myProductDataFacadeImpl"/>
    <bean id="myProductDataFacadeImpl" class="training.my.mycommercefacade.Impl.MyProductDataFacadeImpl">
        <property name="myProductDataConverter" ref="myConverter"/>
        <property name="myProductService" ref="productService"/>
    </bean>

    <bean id="myValidateInterceptor" class="training.my.interceptor.MyValidateInterceptor"/>

    <bean id="myValidateInterceptorMapping"
          class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="myValidateInterceptor"/>
        <property name="typeCode" value="User"/>
    </bean>

    <bean id="myEvent" class="training.my.listener.MyEvent"/>

    <bean id="myEventListener" class="training.my.listener.MyEventListener" parent="abstractEventListener"/>

    <alias name="myCartService" alias="myCartService"/>
    <bean id="myCartService" class="training.my.listener.MyCartService" parent="defaultCartService"/>

    <bean id="currentNumberOfOrdersJob" class="training.my.cronjobs.CurrentNumberOfOrdersJob"
          parent="abstractJobPerformable"/>

    <bean id="currentNumberOfUsersJob" class="training.my.cronjobs.CurrentNumberOfUsersJob"
          parent="abstractJobPerformable"/>

    <!---->
    <bean id="orderProcessDefinitionResource"
          class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
        <property name="resource" value="classpath:order-process.xml"/>
    </bean>

    <bean id="addToCartRegistrar" class="training.my.action.AddToCartRegistrar" parent="abstractAction"/>
    <bean id="placedOrderRegistrar" class="training.my.action.PlacedOrderRegistrar" parent="abstractAction"/>
    <bean id="removedOrderRegistrar" class="training.my.action.RemovedOrderRegistrar" parent="abstractAction"/>
    <bean id="nothingChosenRegistrar" class="training.my.action.NothingChosenRegistrar" parent="abstractAction"/>
    <bean id="myCartServiceForBusinessProcess" class="training.my.service.MyCartServiceForBusinessProcess"/>

</beans>
